{
	"info": {
		"_postman_id": "ec447f9a-8073-4714-83b1-51905caf2aa9",
		"name": "Kantox api testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c514657a-3d71-4ec8-8353-0bb123ed4f70",
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response is an array\", () => {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.be.an(\"array\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/posts",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "/posts/{id}",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "06649eaa-289d-495e-87c9-60a6812e1cc1",
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has required fields\", () => {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"    pm.expect(jsonData).to.have.property(\"title\");",
							"    pm.expect(jsonData).to.have.property(\"author\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/posts/753a",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"posts",
						"753a"
					]
				}
			},
			"response": []
		},
		{
			"name": "/posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c91c8a2c-5659-4424-bb43-b6449779f441",
						"exec": [
							"pm.test(\"Status code is 201\", () => {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response contains new post\", () => {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"    pm.expect(jsonData.title).to.eql(\"post new content\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"title\": \"post new content\",\n  \"author\": \"Mei\"\n}"
				},
				"url": {
					"raw": "http://localhost:3000/posts",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "/posts/{id}",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e1ee661d-0181-4cc5-aadb-7aaa30971ec9",
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Post is updated\", () => {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData.title).to.eql(\"Updated Post\");",
							"    pm.expect(jsonData.author).to.eql(\"Updated Author\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"title\": \"Updated Post\",\n  \"author\": \"Updated Author\"\n}"
				},
				"url": {
					"raw": "http://localhost:3000/posts/c211",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"posts",
						"c211"
					]
				}
			},
			"response": []
		},
		{
			"name": "/posts/{id}",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "60fed176-8cd1-4c40-8dfe-55703f5b4cfa",
						"exec": [
							"pm.test(\"Status code is 200 or 204\", () => {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:3000/posts/354e",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"posts",
						"354e"
					]
				}
			},
			"response": []
		},
		{
			"name": "/comments",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2c79a525-55c8-4be7-99f6-c02d9b1bd814",
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response is an array\", () => {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.be.an(\"array\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/comments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "/comments/{id}",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2fba59cf-e1fe-4e16-9d1d-7ae13b960341",
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has expected fields\", () => {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"    pm.expect(jsonData).to.have.property(\"body\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/comments/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"comments",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "/comments",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4b7118ba-3636-47f2-8ffc-48ab37232a15",
						"exec": [
							"pm.test(\"Status code is 201\", () => {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Comment was created\", () => {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"    pm.expect(jsonData.body).to.eql(\"Nice post!\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"body\": \"Nice post!\",\n  \"postId\": 20000\n}"
				},
				"url": {
					"raw": "http://localhost:3000/comments/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"comments",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "/comments/{id}",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cf446e36-b9d1-43cb-8511-7af0bb89d246",
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Comment is updated\", () => {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData.body).to.eql(\"Updated comment\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"body\": \"Updated comment\",\n  \"postId\": 2\n}"
				},
				"url": {
					"raw": "http://localhost:3000/comments/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"comments",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "/comments/{id}",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "282b5226-d4a0-4777-83df-aa1c932c9c95",
						"exec": [
							"pm.test(\"Status code is 200 or 204\", () => {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:3000/comments/b760",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"comments",
						"b760"
					]
				}
			},
			"response": []
		},
		{
			"name": "/profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c6eee11f-c420-411a-8568-b0e1ad37590b",
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Profile contains expected fields\", () => {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"name\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/profile",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"profile"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}